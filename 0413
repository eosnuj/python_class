#ascii 코드
#ord() : 주어진 값의 아스키코드 값을 반환
#chr() : 주어진 값의 문자값을 반환
#round([숫자],소수점 자리수) : 반올림 해줌
#sorted([숫자들or알파벳들]) :숫자나 알파벳을 순서대로 정렬해줌
# hex
# hex(x)는 정수를 입력받아 16진수(hexadecimal) 문자열로 변환하여 리턴하는 함수이다.
# id
# id(object)는 객체를 입력받아 객체의 고유 주소 값(레퍼런스)을 리턴하는 함수이다.
# enumerate
# 이 함수는 순서가 있는 데이터(리스트, 튜플, 문자열)를 입력으로 받아 인덱스 값을 포함하는 enumerate 객체를 리턴한다.
# eval
# eval(expression)은 문자열로 구성된 표현식을 입력으로 받아 해당 문자열을 실행한 결괏값을 리턴하는 함수이다.

# for i in enumerate(['old','kind','safe']):
#     print(i)
# divmod
# divmod(a, b)는 2개의 숫자를 입력으로 받는다. 그리고 a를 b로 나눈 몫과 나머지를 튜플로 리턴하는 함수이다.
#print(eval('1+3'))
# print(eval("divmod(4,3)"))
# pow
# pow(x, y)는 x의 y 제곱한 결괏값을 리턴하는 함수이다.
# print(pow(1,111111))
















# a=ord(st[0])+it
# b=ord(st[1])+it
# c=ord(st[2])+it
# d=ord(st[3])+it
# print(a,b,c,d)
# a2=chr(a)
# b2=chr(b)
# c2=chr(c)
# d2=chr(d)
# print(a2+b2+c2+d2)
#동시에 두개 이상의 문자값을 ord에 넣을수 없다.`

# def solution(st, it):
#     answer=""
#     for i in range(len(st)):
#         if st.islower():
#             answer+=chr((ord(st[i])+it-ord('a'))%26+ord('a'))
#         elif st.isupper():
#             answer+=chr((ord(st[i])+it-ord('A'))%26+ord('A'))
#     return answer
# print(solution("AB",1))
