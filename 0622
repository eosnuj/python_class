# def solution(players, callings):
#     for i in callings:
#         rank=players.index(i)
#         players[rank],players[rank-1]=players[rank-1],players[rank]
#     return players
# print(solution(["mumu", "soe", "poe", "kai", "mine"],["kai", "kai", "mine", "mine"]))
#나누기2가 가능하면 건전지 소모가 없기 때문에 나눠주고      <-- 이문제의 식 조건
#홀수일 경우는 1칸을 움직여야하기때문에 1개의 건전지를 쓴다.

# def solution(n):
#     answer=1
#     while n != 1:
#         if n%2 == 0:
#             n /= 2
#         else:
#             answer+=1
#             n-=1
#     return answer
#
# print(solution(5))



# 계산기(class)
# add sub mul div 4개의 클래스 함수(두개의 매개 변수를 받는다)
#init 함수를 이용하여 a,b값음 0,0 으로 초기화
#사칙 연산한 값을 return

#1.계산기 클래스를 이용하여 객체 생성
#2.a,b값넣기(수정)
#3.4개의 클래스 함수를 a와 b로 실행 후 출력

# class ccl:
#     def __init__(self,a,b):
#         self.a=a
#         self.b=b
# 
#     def add(self):
#         result= self.a + self.b
#         return result
# 
#     def minus(self):
#         result= self.a - self.b
#         return result
# 
#     def multiple(self):
#         result=self.a * self.b
#         return result
# 
#     def divide(self):
#         result=self.a/self.b
#         return result
# 
# c=ccl(0,0)
# c.a = int(input())
# c.b = int(input())
# print(c.divide())
