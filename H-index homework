def solution(citations):
    citations = sorted(citations)
    l = len(citations)
    for i in range(l):
        if citations[i] >= l-i:
            return l-i
    return 0
#1.if citations[i] >= l-i는 주어진 h번 이상 인용된 논문이 h편 이상이라는 조건 식으로 써야됨
#2.citations[i]는 i번 논문이 인용된 횟수이고 l-i는 인용된 논문의 개수를 최댓값부터 하나씩 줄여나가게 만들어야됨
#3.리스트는 오름차순 정렬된 상태로 만들어서 i번째 이후는 모두 i번째보다 큰 값을 가지게한다.
def solution(dirs):
    result = [[0] * 11 for i in range(11)]
    x, y = 5, 5
    cnt = 0
    check = []
    for i in dirs:
        tmp = []
        first = (x, y)
        if 0 <= x <= 10 and 0 <= y <= 10:
            if i == 'U':
                x -= 1
            elif i == 'L':
                y -= 1
            elif i == 'R':
                y += 1
            else:
                x += 1
        second = (x, y)
        tmp.append(first)
        tmp.append(second)

        if tmp not in check and 0 <= x <= 10 and 0 <= y <= 10:
            if all(first != k[1] or second != k[0]  for k in check):
                check.append(tmp)

        if 0 <= x <= 10 and 0 <= y <= 10:
            result[x][y] += 1 
        else:
            if x == -1:
                x = 0
            elif y == -1:
                y = 0
            elif x == 11:
                x = 10
            else:
                y =10

    return len(check)
